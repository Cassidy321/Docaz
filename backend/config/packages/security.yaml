security:
  # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
  password_hashers:
    Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: "auto"
  # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
  providers:
    # used to reload user from session & other features (e.g. switch_user)
    app_user_provider:
      entity:
        class: App\Entity\User
        property: email
  firewalls:
    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false
    login:
      pattern: ^/api/login
      stateless: true
      json_login:
        check_path: api_login_check
        username_path: email
        password_path: password
        success_handler: App\Security\JwtCookieManager
        failure_handler: lexik_jwt_authentication.handler.authentication_failure
    api:
      pattern: ^/api
      stateless: true
      entry_point: jwt
      provider: app_user_provider
      jwt:
        authenticator: lexik_jwt_authentication.security.jwt_authenticator
      custom_authenticators:
        - App\Security\CsrfAuthenticator
    main:
      lazy: true
      provider: app_user_provider

  # Easy way to control access for large sections of your site
  # Note: Only the *first* access control that matches will be used
  access_control:
    - { path: ^/api/login, roles: PUBLIC_ACCESS }
    - { path: ^/api/register, roles: PUBLIC_ACCESS }
    - { path: ^/api/verify-email, roles: PUBLIC_ACCESS }
    - { path: ^/api/resend-verification, roles: PUBLIC_ACCESS }
    - { path: ^/api/csrf-token, roles: PUBLIC_ACCESS }
    - { path: ^/api, roles: IS_AUTHENTICATED_FULLY }
