services:
  frontend:
    container_name: frontend
    build:
      context: ./frontend # Dossier où chercher
      dockerfile: Dockerfile # Fichier de configuration
    ports:
      - "${FRONTEND_PORT}:5173" # Port local vers le port Vite
    volumes:
      - ./frontend:/app:delegated # Synchronisation du code pour le hot reload
      - /app/node_modules # Empêche l'écrasement des modules installés
    environment:
      - CHOKIDAR_USEPOLLING=true # Meilleure détection des changements dans Docker
    restart: unless-stopped # Redémarrage auto sauf arrêt manuel
    networks:
      - app-network # Connexion au réseau commun
    tty: true # Support terminal interactif
    stdin_open: true # Permet l'interactivité

  backend:
    container_name: backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend:/var/www/html:delegated # Synchronisation du code PHP
    depends_on:
      - database # Démarre après la base de données
    networks:
      - app-network
    restart: unless-stopped
    environment:
      # Clés secrètes pour se connecter 
      - APP_ENV=${APP_ENV}
      - APP_SECRET=${APP_SECRET}
      - DATABASE_URL=mysql://${DB_USER}:${DB_PASSWORD}@database:${DB_PORT}/${DB_NAME}?serverVersion=8.0
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}

  backend-nginx:
    container_name: backend-nginx
    image: nginx:alpine
    volumes:
      - ./backend:/var/www/html:ro # Code source en lecture seule
      - ./backend/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
        # Configuration personnalisée
    ports:
      - "${BACKEND_NGINX_PORT}:80" # Port d'accès à l'API
    depends_on:
      - backend
    networks:
      - app-network
    restart: unless-stopped

  database:
    container_name: database
    image: mysql:8.0
    environment:
      - MYSQL_DATABASE=${DB_NAME}
      - MYSQL_USER=${DB_USER}
      - MYSQL_PASSWORD=${DB_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
    volumes:
      - database-data:/var/lib/mysql # Stockage persistant des données
    networks:
      - app-network
    restart: unless-stopped
    command:
      --default-authentication-plugin=mysql_native_password
      # Évite les problèmes de compatibilité avec PHP
    healthcheck: # Vérifie la disponibilité
      test:
        [
          "CMD",
          "mysqladmin",
          "ping",
          "-h",
          "localhost",
          "-u",
          "${DB_USER}",
          "-p${DB_PASSWORD}",
        ]
      interval: 10s # Fréquence des vérifications
      timeout: 5s
      retries: 5

  phpmyadmin:
    container_name: phpmyadmin
    image: phpmyadmin/phpmyadmin
    ports:
      - "${PMA_PORT}:80" # Accès via navigateur
    depends_on:
      - database
    environment:
      - PMA_HOST=database # Base à connecter
      - PMA_USER=${DB_USER}
      - PMA_PASSWORD=${DB_PASSWORD}
      - PMA_ABSOLUTE_URI=http://localhost:${PMA_PORT}/ # URL pour les redirections
    networks:
      - app-network
    restart: unless-stopped

networks:
  app-network:
    name: app-network # Réseau partagé
    driver: bridge

volumes:
  database-data: # Stockage persistant
